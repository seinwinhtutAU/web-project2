// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import TaskProvider from "./task-provider";
// import UserProvider from "./user-provider";
// import MenuWrapper from "./menu-wrapper";
// import MainWrapper from "./ui/main-wrapper";
// import clientPromise from "./lib/mongodb";
// import { Task, Category } from "./lib/data";
// import { ObjectId } from "mongodb";

// // Fonts
// const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// // MongoDB types
// type TaskDB = Omit<Task, "_id"> & { _id: ObjectId };
// type CategoryDB = Omit<Category, "_id"> & { _id: ObjectId };

// // Fetch all tasks from DB
// async function fetchTasksFromDb(): Promise<Task[]> {
//   const client = await clientPromise;
//   const db = client.db("toDoLists");
//   const tasksFromDb = await db.collection<TaskDB>("tasks").find().toArray();
//   return tasksFromDb.map((task) => ({
//     _id: task._id.toString(),
//     title: task.title,
//     startDate: task.startDate,
//     dueDate: task.dueDate,
//     note: task.note,
//     category: task.category,
//     status: task.status,
//     userId: task.userId,
//   }));
// }

// // Fetch all categories from DB
// async function fetchCategoriesFromDb(): Promise<Category[]> {
//   const client = await clientPromise;
//   const db = client.db("toDoLists");
//   const categoriesFromDb = await db
//     .collection<CategoryDB>("categories")
//     .find()
//     .toArray();
//   return categoriesFromDb.map((cat) => ({
//     _id: cat._id.toString(),
//     name: cat.name,
//     color: cat.color,
//     userId: cat.userId,
//   }));
// }

// // ---------------- Root Layout ----------------

// export default async function RootLayout({
//   children,
// }: {
//   children: React.ReactNode;
// }) {
//   // Fetch initial tasks and categories
//   const tasks = await fetchTasksFromDb();
//   const categories = await fetchCategoriesFromDb();

//   return (
//     <html lang="en">
//       <head>
//         <link
//           href="https://fonts.googleapis.com/icon?family=Material+Icons"
//           rel="stylesheet"
//         />
//       </head>
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <MenuWrapper />
//         <UserProvider>
//           <TaskProvider
//             initialTasks={tasks}
//             initialCategories={categories} // categories will be filtered inside TaskProvider by current user
//           >
//             <MainWrapper>{children}</MainWrapper>
//           </TaskProvider>
//         </UserProvider>
//       </body>
//     </html>
//   );
// }

import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import MenuWrapper from "./menu-wrapper";
import TaskProviderWrapper from "./TaskProviderWrapper";

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "To-Do List App",
  description: "Next.js + MongoDB To-Do App",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <head>
        <link
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
          rel="stylesheet"
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen bg-green-50`}
      >
        <TaskProviderWrapper>
          <MenuWrapper />
          {children}
        </TaskProviderWrapper>
      </body>
    </html>
  );
}
